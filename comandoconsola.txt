
# Comandos generales de la terminal

ls sirve para saber que archivos o carpetas existen en la carpeta actual
cd "<carpeta>"             # Cambia de carpeta (directorio)
cd ..                      # Sube un nivel en el árbol de carpetas
pwd cual es la ruta actual que estoy utilizando 
mkdir "<nombre de la carpeta>" sirve para crear una carpeta vacía 
clear sirve para limpiar la consola 
lpstat -p -d                # Te muestra: Impresoras instaladas y Cuál es la impresora predeterminada
lp <archivo.txt>            # Este comando manda el archivo a la impresora predeterminada.
touch "<nombre del archivo>"   # Crea un archivo vacío
rm "<archivo>"                # Elimina un archivo
rmdir "<carpeta>"             # Elimina una carpeta vacía
rm -r "<carpeta>"             # Elimina una carpeta y todo su contenido
mv "<origen>" "<destino>"     # Mueve o renombra archivos o carpetas
cp "<origen>" "<destino>"     # Copia archivos o carpetas
cat "<archivo>"               # Muestra el contenido de un archivo
echo "<texto>"                # Imprime texto en la consola o lo guarda en un archivo
grep "<texto>" <archivo>      # Busca texto dentro de un archivo
history                       # Muestra el historial de comandos usados
man <comando>                 # Mgit uestra el manual de un comando
whoami                        # Muestra el nombre del usuario actual
date                          # Muestra la fecha y hora actual
uptime                        # Muestra el tiempo que el sistema ha estado encendido
top                           # Muestra procesos activos en tiempo real
ps aux                        # Muestra todos los procesos en ejecución
kill <PID>                    # Termina un proceso con el ID especificado
df -h                         # Muestra el uso del espacio en disco en formato legible
du -sh <carpeta>              # Muestra el tamaño de una carpeta
open <archivo o carpeta>      # Abre un archivo o carpeta con la aplicación por defecto (macOS)
say "Hola"                    # Reproduce en voz alta un mensaje (solo en macOS)
ctrl+c                        # Detiene la consola  

# Comandos Git
git init                      # Inicializa un repositorio Git
git clone "<URL>"            # Clona un repositorio remoto
git status                    # Muestra el estado actual del repositorio
git add "<archivo>"          # Agrega archivos al área de staging
git commit -m "mensaje"      # Crea un commit con mensaje
git push                      # Envía los cambios al repositorio remoto
git pull                      # Descarga cambios del repositorio remoto
git log                       # Muestra el historial de commits
git checkout "<archivo>"      # Recupera la última versión del archivo desde el último commit
git config --global alias.<alias> "<comando_completo>"  # Crea un alias para un comando
git diff                      # Muestra los cambios entre el archivo modificado y el último commit
git reset "<archivo>"         # Quita un archivo del área de staging
git branch                    # Lista ramas existentes
git checkout -b "<rama>"      # Crea y cambia a una nueva rama
git merge "<rama>"            # Fusiona una rama a la actual
git tag                       # Muestra todos los tags que he hecho
git tag "<nombre de tag>"     # Añade un tag al commit que estoy trabajando 
:q                            # Salir del editor de texto sin guardar los cambios 
:qw                            # Salir del editor de texto guardando los cambios 

# Comandos LaTeX (en terminal con pdflatex instalado)
pdflatex "<archivo>.tex"     # Compila un archivo .tex a PDF
bibtex "<archivo>"           # Procesa bibliografía del archivo .tex
latexmk -pdf "<archivo>.tex" # Compilación automática a PDF

# Comandos útiles en Visual Studio Code (VS Code)
code .                       # Abre VS Code en la carpeta actual
code "<archivo>"             # Abre un archivo específico en VS Code
cmd + j                      # Abre la terminal integrada en VS Code (Mac)
cmd + p                      # Buscar y abrir rápidamente archivos (Mac)
cmd + b                      # Mostrar u ocultar la barra lateral (Mac)
cmd + {                      # Cambia al archivo  siguiente 
cmd + }                      # Cambia al archivo anterior
cmd + shift + p              # Abre la paleta de comandos
cmd + k, cmd + s             # Abre los atajos de teclado
cmd + /                      # Comenta o descomenta la línea actual
cmd + f                      # Buscar dentro del archivo actual
cmd + option + f             # Reemplazar dentro del archivo actual
cmd + shift + f              # Buscar en todos los archivos del proyecto
cmd + n                      # Nuevo archivo
cmd + s                      # Guardar archivo
cmd + shift + s              # Guardar como...
cmd + w                      # Cierra el archivo actual
cmd + q                      # Cierra Visual Studio Code

# Alias útiles para Git (ordenados alfabéticamente)

git aa         # Equivale a 'git add .' - Agrega todos los archivos al área de staging
git aliases    # Muestra todos los alias configurados en tu Git
git amend      # Equivale a 'git commit --amend' - Edita el último commit
git br         # Equivale a 'git branch' - Lista todas las ramas
git cleanall   # Equivale a 'git clean -fdx' - Elimina todos los archivos no rastreados (¡peligroso!)
git cm         # Equivale a 'git commit -m' - Crea un commit con mensaje inline
git co         # Equivale a 'git checkout' - Cambia de rama o recupera archivos
git contrib    # Equivale a 'git shortlog -sn' - Lista los contribuidores ordenados por cantidad de commits
git cp         # Equivale a 'git cherry-pick' - Aplica commits individuales desde otra rama
git d          # Equivale a 'git diff --cached' - Muestra los cambios en staging
git df         # Equivale a 'git diff' - Muestra las diferencias de los archivos modificados
git fix        # Equivale a 'git commit --amend --no-edit' - Agrega cambios al último commit sin editar el mensaje
git hist       # Historial detallado con autor y fecha
git last       # Muestra el último commit (log -1 HEAD)
git lg         # Historial compacto con ramas y colores (log --oneline --graph --all --decorate)
git pff        # Equivale a 'git pull --ff-only' - Hace pull solo si se puede hacer fast-forward
git pl         # Equivale a 'git pull' - Descarga los cambios del repositorio remoto
git pop        # Equivale a 'git stash pop' - Restaura el último stash guardado
git ps         # Equivale a 'git push' - Sube los commits al repositorio remoto
git rb         # Equivale a 'git rebase' - Reaplica commits sobre otra base
git rbi        # Equivale a 'git rebase -i HEAD~n' - Rebase interactivo para editar los últimos n commits
git remotes    # Equivale a 'git remote -v' - Lista los repositorios remotos configurados
git review     # Equivale a 'git log origin/main..HEAD' - Muestra commits aún no enviados al remoto
git s          # Equivale a 'git status -s' - Muestra el estado en modo compacto
git save       # Equivale a 'git stash save "trabajo temporal"' - Guarda cambios temporales
git shortlog   # Muestra un resumen de commits por autor
git st         # Equivale a 'git status' - Muestra el estado actual del repositorio
git stashlist  # Equivale a 'git stash list' - Muestra los stashes disponibles
git tree       # Igual a 'lg' - Visualiza el árbol de commits
git undo       # Equivale a 'git revert HEAD' - Revierte el último commit sin alterar el historial
git unstage    # Equivale a 'git reset HEAD --' - Quita archivos del área de staging
git who        # Muestra quién fue el último en modificar cada línea del archivo (usa git blame)
git wip        # Equivale a 'git commit -m "wip"' - Hace un commit temporal (work in progress)
